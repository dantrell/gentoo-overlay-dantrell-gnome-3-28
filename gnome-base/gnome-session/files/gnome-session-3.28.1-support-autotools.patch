diff '--exclude=.git' -urN a/Makefile.am b/Makefile.am
--- a/Makefile.am	1969-12-31 19:00:00.000000000 -0500
+++ b/Makefile.am	2018-04-25 15:14:05.245268257 -0400
@@ -0,0 +1,47 @@
+SUBDIRS =			\
+	gnome-session		\
+	tools			\
+	data			\
+	doc			\
+	po
+
+ACLOCAL_AMFLAGS = -I m4 ${ACLOCAL_FLAGS}
+
+EXTRA_DIST =			\
+	HACKING			\
+	MAINTAINERS		\
+	meson.build		\
+	meson_options.txt	\
+	meson_post_install.py	\
+	po/meson.build
+
+MAINTAINERCLEANFILES = \
+	$(srcdir)/INSTALL \
+	$(srcdir)/aclocal.m4 \
+	$(srcdir)/config.guess \
+	$(srcdir)/config.h.in \
+	$(srcdir)/config.sub \
+	$(srcdir)/depcomp \
+	$(srcdir)/install-sh \
+	$(srcdir)/ltmain.sh \
+	$(srcdir)/missing \
+	$(srcdir)/mkinstalldirs \
+	$(srcdir)/configure \
+	$(srcdir)/m4/intltool.m4 \
+	`find "$(srcdir)" -type f -name Makefile.in -print`
+
+CHANGELOG_GIT_RANGE = GNOME_SESSION_2_26_1..
+dist-hook:
+	$(AM_V_GEN)if test -d "$(srcdir)/.git"; then \
+	  ( echo '# Generated by Makefile. Do not edit.'; echo; \
+	    GIT_DIR="$(top_srcdir)/.git" ./missing --run \
+	    git log $(CHANGELOG_GIT_RANGE) --no-color -M -C --name-status ) \
+	  > ChangeLog.tmp \
+	  && mv -f ChangeLog.tmp $(distdir)/ChangeLog \
+	  || ( rm -f ChangeLog.tmp ; echo Failed to generate ChangeLog >&2 ); \
+	else \
+	  echo A git checkout is required to generate ChangeLog >&2; \
+	fi
+
+GITIGNOREFILES = $(PACKAGE)-\*.tar.{gz,bz2,xz}
+-include $(top_srcdir)/git.mk
diff '--exclude=.git' -urN a/autogen.sh b/autogen.sh
--- a/autogen.sh	1969-12-31 19:00:00.000000000 -0500
+++ b/autogen.sh	2018-04-25 15:14:05.245268257 -0400
@@ -0,0 +1,21 @@
+#!/bin/sh
+# Run this to generate all the initial makefiles, etc.
+
+srcdir=`dirname $0`
+test -z "$srcdir" && srcdir=.
+
+PKG_NAME="gnome-session"
+
+(test -f $srcdir/configure.ac \
+  && test -f $srcdir/$PKG_NAME.doap) || {
+    echo -n "**Error**: Directory "\`$srcdir\'" does not look like the"
+    echo " top-level $PKG_NAME directory"
+    exit 1
+}
+
+which gnome-autogen.sh || {
+    echo "You need to install gnome-common."
+    exit 1
+}
+
+. gnome-autogen.sh
diff '--exclude=.git' -urN a/configure.ac b/configure.ac
--- a/configure.ac	1969-12-31 19:00:00.000000000 -0500
+++ b/configure.ac	2018-04-25 15:14:05.245268257 -0400
@@ -0,0 +1,412 @@
+AC_INIT([gnome-session],
+        [3.26.0],
+        [http://bugzilla.gnome.org/enter_bug.cgi?product=gnome-session])
+
+AC_CONFIG_SRCDIR([gnome-session])
+AC_CONFIG_HEADERS([config.h])
+AC_CONFIG_MACRO_DIR([m4])
+
+AM_INIT_AUTOMAKE([1.11 no-dist-gzip dist-xz tar-ustar])
+
+m4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])
+
+# Check for programs
+AC_PROG_CC
+AM_PROG_CC_C_O
+AC_PATH_PROG(GLIB_GENMARSHAL, glib-genmarshal)
+PKG_PROG_PKG_CONFIG()
+
+# Initialize libtool
+LT_PREREQ([2.2.6])
+LT_INIT([dlopen disable-static])
+
+GNOME_MAINTAINER_MODE_DEFINES
+GNOME_COMPILE_WARNINGS([maximum])
+
+AC_ARG_ENABLE(deprecation_flags,
+              [AS_HELP_STRING([--enable-deprecation-flags],
+                              [use *_DISABLE_DEPRECATED flags @<:@default=no@:>@])],,
+              [enable_deprecation_flags=no])
+
+if test "x$enable_deprecation_flags" = "xyes"; then
+   DISABLE_DEPRECATED_CFLAGS=$DISABLE_DEPRECATED
+   AC_SUBST([DISABLE_DEPRECATED_CFLAGS])
+fi
+
+GLIB_REQUIRED=2.46.0
+GTK3_REQUIRED=3.18.0
+DBUS_GLIB_REQUIRED=0.76
+UPOWER_REQUIRED=0.9.0
+JSON_GLIB_REQUIRED=0.10
+GNOME_DESKTOP_REQUIRED=3.18.0
+
+AC_ARG_ENABLE(session-selector, AS_HELP_STRING([--enable-session-selector],
+                                               [enable building a custom session selector dialog]),
+                                                enable_session_selector=$enableval,enable_session_selector=no)
+
+AM_CONDITIONAL(BUILD_SESSION_SELECTOR,
+               [test "$enable_session_selector" = yes])
+
+if test "$enable_session_selector" = yes; then
+        PKG_CHECK_MODULES(SESSION_SELECTOR, gtk+-3.0 gio-2.0)
+fi
+
+dnl ====================================================================
+dnl Dependency Checks
+dnl ====================================================================
+
+dnl Standard vertical stacks
+PKG_CHECK_MODULES(GIO, gio-2.0)
+PKG_CHECK_MODULES(GIOUNIX, gio-unix-2.0 >= $GLIB_REQUIRED)
+PKG_CHECK_MODULES(GTK3, gtk+-3.0 >= $GTK3_REQUIRED)
+
+PKG_CHECK_MODULES(GNOME_SESSION,
+        glib-2.0 >= $GLIB_REQUIRED
+        gio-2.0 >= $GLIB_REQUIRED
+        json-glib-1.0 >= $JSON_GLIB_REQUIRED
+        gnome-desktop-3.0 >= $GNOME_DESKTOP_REQUIRED
+)
+
+dnl We can only support old upower
+dnl https://bugzilla.gnome.org/show_bug.cgi?id=710383
+PKG_CHECK_MODULES(UPOWER, upower-glib < 0.99.0, have_old_upower=yes, have_old_upower=no)
+AS_IF([test x$have_old_upower = xyes], [
+  AC_DEFINE([HAVE_OLD_UPOWER], [1], [Define if we have an older upower])
+])
+AM_CONDITIONAL(HAVE_OLD_UPOWER, test x$have_old_upower = xyes)
+
+PKG_CHECK_MODULES(SESSION_PROPERTIES,
+        glib-2.0 >= $GLIB_REQUIRED
+        gtk+-3.0 >= $GTK3_REQUIRED
+)
+
+PKG_CHECK_MODULES(X11, x11)
+PKG_CHECK_MODULES(SM, sm)
+PKG_CHECK_MODULES(ICE, ice)
+PKG_CHECK_MODULES(XEXT, xext xau)
+
+PKG_CHECK_MODULES(GL_TEST, xcomposite gl glib-2.0 epoxy)
+PKG_CHECK_MODULES(GLES_TEST, egl glesv2)
+
+dnl ====================================================================
+dnl Check for gconf
+dnl ====================================================================
+AC_ARG_ENABLE([gconf],
+              AS_HELP_STRING([--enable-gconf], [Support gconf-based autostart]),
+              [enable_gconf=$enableval],
+              [enable_gconf=auto])
+
+if test x$enable_gconf != xno ; then
+        PKG_CHECK_MODULES(GCONF, gconf-2.0, [have_gconf=yes], [have_gconf=no])
+
+        if test x$enable_gconf = xyes -a x$have_gconf = xno ; then
+            AC_MSG_ERROR([GConf support explicitly required, but gconf not found])
+        fi
+
+        if test x$have_gconf = xyes ; then
+            AC_DEFINE([HAVE_GCONF], [1], [Define if we support gconf-based autostart])
+        fi
+fi
+
+dnl ====================================================================
+dnl Check for systemd
+dnl ====================================================================
+AC_ARG_ENABLE([systemd],
+              AS_HELP_STRING([--enable-systemd], [Use systemd]),
+              [enable_systemd=$enableval],
+              [enable_systemd=auto])
+
+PKG_CHECK_MODULES(SYSTEMD,
+                  [gio-unix-2.0 libsystemd >= 209],
+                  [have_systemd=yes],
+                  [PKG_CHECK_MODULES([SYSTEMD],
+                                     [gio-unix-2.0 libsystemd-login >= 183 libsystemd-daemon libsystemd-journal],
+                                     [have_systemd=yes],[have_systemd=no])])
+
+AC_MSG_CHECKING([whether to use systemd])
+
+if test x$enable_systemd = xauto ; then
+        if test x$have_systemd = xno ; then
+                enable_systemd=no
+        else
+                enable_systemd=yes
+        fi
+fi
+
+AC_MSG_RESULT($enable_systemd)
+
+if test x$enable_systemd = xyes; then
+        if test x$have_systemd = xno; then
+                AC_MSG_ERROR([Systemd support explicitly required, but systemd not found])
+        fi
+        AC_DEFINE(HAVE_SYSTEMD, 1, [Define if systemd is used for session tracking])
+fi
+
+AC_SUBST(SYSTEMD_CFLAGS)
+AC_SUBST(SYSTEMD_LIBS)
+
+AM_CONDITIONAL(HAVE_SYSTEMD, [test "$enable_systemd" = "yes"], [Using systemd])
+
+dnl ====================================================================
+dnl Check for ConsoleKit
+dnl ====================================================================
+
+AC_ARG_ENABLE([consolekit],
+              AS_HELP_STRING([--enable-consolekit], [Use consolekit]),
+              [enable_consolekit=$enableval],
+              [enable_consolekit=no])
+
+AC_MSG_CHECKING([whether to use consolekit])
+AC_MSG_RESULT($enable_consolekit)
+
+if test x$enable_consolekit = xyes; then
+        PKG_CHECK_MODULES(CONSOLEKIT, [dbus-glib-1 >= $DBUS_GLIB_REQUIRED],
+                          [have_consolekit=yes], [have_consolekit=no])
+        if test x$have_consolekit = xno; then
+                AC_MSG_ERROR([ConsoleKit support explicitly required, but dbus-glib not found])
+        fi
+        AC_DEFINE(HAVE_CONSOLEKIT, 1, [Define if ConsoleKit is used for session tracking])
+fi
+
+AC_SUBST(CONSOLEKIT_CFLAGS)
+AC_SUBST(CONSOLEKIT_LIBS)
+
+AM_CONDITIONAL(HAVE_CONSOLEKIT, [test "$enable_consolekit" = "yes"], [Using ConsoleKit])
+
+if test x$enable_systemd = xyes; then
+        if test x$enable_consolekit = xyes; then
+                session_tracking="systemd (with fallback to ConsoleKit)"
+        else
+                session_tracking="systemd"
+        fi
+else
+        if test x$enable_consolekit = xyes; then
+                session_tracking="ConsoleKit"
+        else
+                session_tracking="null backend"
+        fi
+fi
+
+dnl ====================================================================
+dnl Check for XSync extension
+dnl ====================================================================
+
+have_xsync=no
+AC_CHECK_HEADER(X11/extensions/sync.h, [have_xsync=yes],,
+                    [#include <X11/Xlib.h>])
+if test "$have_xsync" = yes; then
+  AC_DEFINE(HAVE_XSYNC, 1, [Have the SYNC extension library])
+fi
+
+dnl ====================================================================
+dnl Check for XTest extension
+dnl ====================================================================
+
+have_xtest=no
+PKG_CHECK_MODULES(XTEST, xtst, have_xtest=yes, have_xtest=no)
+if test "$have_xtest" = yes; then
+    AC_DEFINE(HAVE_XTEST, 1, [Have the XTest extension library])
+fi
+AC_SUBST(HAVE_XTEST)
+AC_SUBST(XTEST_CFLAGS)
+AC_SUBST(XTEST_LIBS)
+
+dnl ====================================================================
+dnl XRender checks
+dnl ====================================================================
+
+PKG_CHECK_MODULES(XRENDER, xrender, have_xrender=yes, have_xrender=no)
+AM_CONDITIONAL(HAVE_XRENDER, test x$have_xrender = xyes)
+if test $have_xrender=yes; then
+    AC_DEFINE(HAVE_XRENDER, 1, [Have the Render X extension])
+fi
+AC_SUBST(HAVE_XRENDER)
+AC_SUBST(XRENDER_CFLAGS)
+AC_SUBST(XRENDER_LIBS)
+
+dnl ====================================================================
+dnl - DocBook Documentation
+dnl ====================================================================
+
+AC_ARG_ENABLE(docbook-docs,
+              [AS_HELP_STRING([--enable-docbook-docs],
+                              [build documentation (requires xmlto)])],
+              [enable_docbook_docs=$enableval],
+              [enable_docbook_docs=auto])
+AC_PATH_PROG(XMLTO, xmlto, no)
+AC_MSG_CHECKING([whether to build DocBook documentation])
+if test x$XMLTO = xno ; then
+	have_docbook=no
+else
+	have_docbook=yes
+fi
+if test x$enable_docbook_docs = xauto ; then
+	if test x$have_docbook = xno ; then
+        	enable_docbook_docs=no
+	else
+		enable_docbook_docs=yes
+	fi
+fi
+if test x$enable_docbook_docs = xyes; then
+	if test x$have_docbook = xno; then
+		AC_MSG_ERROR([Building DocBook docs explicitly required, but DocBook not found])
+	fi
+fi
+AM_CONDITIONAL(DOCBOOK_DOCS_ENABLED, test x$enable_docbook_docs = xyes)
+AC_MSG_RESULT($enable_docbook_docs)
+AC_ARG_ENABLE(man,
+              [AS_HELP_STRING([--enable-man],
+                              [generate man pages [default=yes]])],,
+              enable_man=yes)
+if test "$enable_man" != no; then
+  AC_PATH_PROG([XSLTPROC], [xsltproc])
+  if test -z "$XSLTPROC"; then
+    AC_MSG_ERROR([xsltproc is required for --enable-man])
+  fi
+fi
+AM_CONDITIONAL(ENABLE_MAN, test "$enable_man" != no)
+
+dnl ====================================================================
+dnl Check for xsltproc
+dnl ====================================================================
+AC_PATH_PROG([XSLTPROC], [xsltproc])
+
+dnl ====================================================================
+dnl Language Support
+dnl ====================================================================
+IT_PROG_INTLTOOL([0.40.6])
+
+GETTEXT_PACKAGE=gnome-session-3.0
+AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE, "$GETTEXT_PACKAGE",
+                   [The gettext translation domain])
+AC_SUBST(GETTEXT_PACKAGE)
+
+AM_GLIB_GNU_GETTEXT
+GLIB_GSETTINGS
+
+dnl ====================================================================
+dnl Headers
+dnl ====================================================================
+AC_HEADER_STDC
+AC_CHECK_HEADERS(syslog.h tcpd.h sys/param.h)
+
+dnl ====================================================================
+dnl check for backtrace support
+dnl ====================================================================
+
+AC_CHECK_HEADERS(execinfo.h)
+AC_CHECK_LIB(execinfo, backtrace, [have_backtrace="yes"], [have_backtrace="no"])
+EXECINFO_LIBS=""
+if test "x$have_backtrace" = "xyes"; then
+        EXECINFO_LIBS="-lexecinfo"
+fi
+AC_SUBST(EXECINFO_LIBS)
+
+dnl ====================================================================
+dnl Check for X transport interface - allows to disable ICE Transports
+dnl See also https://bugzilla.gnome.org/show_bug.cgi?id=725100
+dnl ====================================================================
+AC_ARG_WITH([xtrans],
+	    [AS_HELP_STRING([--without-xtrans],
+			   [Build without xtrans support (results in ICE listening on remote TCP ports)])],
+	    [],
+	    [with_xtrans=yes])
+AS_IF([test "$with_xtrans" != "no"],
+      [PKG_CHECK_MODULES(XTRANS, xtrans,
+      [AC_DEFINE(HAVE_XTRANS, 1, [Have the X Transport library])])])
+AC_SUBST(HAVE_XTRANS)
+
+dnl ====================================================================
+dnl Code for checking whether IPv6 is enabled on the system....
+dnl ====================================================================
+AC_MSG_CHECKING([whether to enable ipv6])
+AC_ARG_ENABLE(ipv6,
+              [AS_HELP_STRING([--enable-ipv6],
+                              [enable IPv6 extensions])],,
+              [enable_ipv6=yes])
+have_full_ipv6=no
+if test $enable_ipv6 = yes; then
+
+  dnl ====================================================================
+  dnl Code for checking presence of AF_INET6 on the system....
+  dnl ====================================================================
+  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
+    #include <sys/types.h>
+    #include <sys/socket.h>]], [[
+    socket(AF_INET6, SOCK_STREAM, 0)
+    ]])],
+    [have_ipv6=yes],
+    [have_ipv6=no]
+  )
+  AC_MSG_RESULT($have_ipv6)
+
+  dnl =================================================================
+  dnl Now we would check for specific function like getaddrinfo.
+  dnl =================================================================
+  have_getaddrinfo=no
+  if test $have_ipv6=yes; then
+    AC_CHECK_FUNC(getaddrinfo, have_getaddrinfo=yes)
+    if test $have_getaddrinfo != yes; then
+      # getaddrinfo is not in the default libraries.  See if it's in some other.
+      for lib in bsd socket inet; do
+        AC_CHECK_LIB($lib, getaddrinfo, [LIBS="$LIBS -l$lib";have_getaddrinfo=yes; break])
+      done
+    fi
+    if test $have_getaddrinfo=yes; then
+      AC_DEFINE(ENABLE_IPV6, 1, [Define if IPV6 is supported])
+      have_full_ipv6=yes
+    fi
+  fi
+fi
+dnl ==============================================================================
+dnl End of IPv6 checks
+dnl ==============================================================================
+
+AC_CONFIG_FILES([
+Makefile
+doc/Makefile
+doc/dbus/Makefile
+doc/dbus/gnome-session.xml
+doc/man/Makefile
+data/Makefile
+data/org.gnome.SessionManager.gschema.xml
+gnome-session/Makefile
+tools/Makefile
+po/Makefile.in
+])
+AC_OUTPUT
+
+dnl ---------------------------------------------------------------------------
+dnl - Show summary
+dnl ---------------------------------------------------------------------------
+
+echo "
+              gnome-session $VERSION
+              `echo gnome-session $VERSION | sed "s/./=/g"`
+
+        prefix:                   ${prefix}
+        exec_prefix:              ${exec_prefix}
+        libdir:                   ${libdir}
+        bindir:                   ${bindir}
+        sbindir:                  ${sbindir}
+        sysconfdir:               ${sysconfdir}
+        localstatedir:            ${localstatedir}
+        datadir:                  ${datadir}
+        source code location:     ${srcdir}
+        compiler:                 ${CC}
+        cflags:                   ${CFLAGS}
+        Maintainer mode:          ${USE_MAINTAINER_MODE}
+        Use *_DISABLE_DEPRECATED: ${enable_deprecation_flags}
+
+        GConf support:            ${enable_gconf}
+        Session tracking:         ${session_tracking}
+        IPv6 support:             ${have_full_ipv6}
+        Backtrace support:        ${have_backtrace}
+        XRender support:          ${have_xrender}
+        XSync support:            ${have_xsync}
+        XTest support:            ${have_xtest}
+	Legacy UPower backend:    ${have_old_upower}
+        Build Docbook:            ${enable_docbook_docs}
+        Build manpages:           ${enable_man}
+
+"
diff '--exclude=.git' -urN a/data/Makefile.am b/data/Makefile.am
--- a/data/Makefile.am	1969-12-31 19:00:00.000000000 -0500
+++ b/data/Makefile.am	2018-04-25 15:14:05.245268257 -0400
@@ -0,0 +1,65 @@
+uidir = $(pkgdatadir)
+ui_DATA =
+
+if BUILD_SESSION_SELECTOR
+ui_DATA += session-selector.ui
+endif
+
+hwcompatdir = $(pkgdatadir)
+hwcompat_DATA = hardware-compatibility
+
+xsessiondir = $(datadir)/xsessions
+xsession_in_files = gnome.desktop.in gnome-xorg.desktop.in
+
+if BUILD_SESSION_SELECTOR
+xsession_in_files += gnome-custom-session.desktop.in
+endif
+
+xsession_DATA = $(xsession_in_files:.desktop.in=.desktop)
+
+wayland_sessiondir = $(datadir)/wayland-sessions
+wayland_session_in_files = gnome.desktop.in
+wayland_session_DATA = $(wayland_session_in_files:.desktop.in=.desktop)
+
+sessiondir = $(datadir)/gnome-session/sessions
+session_in_in_files = gnome.session.desktop.in.in gnome-dummy.session.desktop.in.in
+session_in_files = $(session_in_in_files:.session.desktop.in.in=.session.desktop.in)
+session_DATA = $(session_in_files:.session.desktop.in=.session)
+
+%.session.desktop.in: %.session.desktop.in.in Makefile
+	$(AM_V_GEN)sed \
+		-e "s|\@LIBEXECDIR\@|$(libexecdir)|" \
+		$< > $@
+
+%.session: %.session.desktop.in   $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
+
+@INTLTOOL_DESKTOP_RULE@
+@INTLTOOL_XML_NOMERGE_RULE@
+
+gsettings_SCHEMAS = org.gnome.SessionManager.gschema.xml
+@GSETTINGS_RULES@
+
+migrationdir = $(datadir)/GConf/gsettings
+dist_migration_DATA = gnome-session.convert
+
+EXTRA_DIST =					\
+	$(xsession_in_files)			\
+	$(session_in_in_files)			\
+	$(wayland_session_in_files)		\
+	$(gsettings_SCHEMAS:.xml=.xml.in)	\
+	session-selector.ui			\
+	gnome-custom-session.desktop.in		\
+	$(ui_DATA)				\
+	$(hwcompat_DATA)			\
+	meson.build
+
+CLEANFILES =					\
+	$(gsettings_SCHEMAS)			\
+	$(xsession_DATA)			\
+	$(wayland_session_DATA)			\
+	$(session_DATA)
+
+DISTCLEANFILES =				\
+	$(gsettings_SCHEMAS)
+
+-include $(top_srcdir)/git.mk
diff '--exclude=.git' -urN a/doc/Makefile.am b/doc/Makefile.am
--- a/doc/Makefile.am	1969-12-31 19:00:00.000000000 -0500
+++ b/doc/Makefile.am	2018-04-25 15:14:05.245268257 -0400
@@ -0,0 +1,9 @@
+SUBDIRS = dbus
+
+if ENABLE_MAN
+SUBDIRS += man
+endif
+
+EXTRA_DIST = meson.build
+
+-include $(top_srcdir)/git.mk
diff '--exclude=.git' -urN a/doc/dbus/Makefile.am b/doc/dbus/Makefile.am
--- a/doc/dbus/Makefile.am	1969-12-31 19:00:00.000000000 -0500
+++ b/doc/dbus/Makefile.am	2018-04-25 15:14:05.245268257 -0400
@@ -0,0 +1,49 @@
+SPEC_XML_FILES =					\
+	gnome-session.xml				\
+	org.gnome.SessionManager.ref.xml		\
+	org.gnome.SessionManager.Client.ref.xml		\
+	org.gnome.SessionManager.ClientPrivate.ref.xml	\
+	org.gnome.SessionManager.Inhibitor.ref.xml	\
+	org.gnome.SessionManager.Presence.ref.xml
+
+if DOCBOOK_DOCS_ENABLED
+
+htmldocdir = $(docdir)/dbus
+htmldoc_DATA = gnome-session.html
+
+gnome-session.html: $(SPEC_XML_FILES)
+	$(AM_V_GEN)$(XMLTO) xhtml-nochunks -m $(top_srcdir)/doc/dbus/config.xsl gnome-session.xml
+
+endif # DOCBOOK_DOCS_ENABLED
+
+org.gnome.SessionManager.ref.xml: $(top_srcdir)/gnome-session/org.gnome.SessionManager.xml spec-to-docbook.xsl
+	$(AM_V_GEN)$(XSLTPROC) $(top_srcdir)/doc/dbus/spec-to-docbook.xsl $< | tail -n +2 > $@
+org.gnome.SessionManager.Client.ref.xml: $(top_srcdir)/gnome-session/org.gnome.SessionManager.Client.xml spec-to-docbook.xsl
+	$(AM_V_GEN)$(XSLTPROC) $(top_srcdir)/doc/dbus/spec-to-docbook.xsl $< | tail -n +2 > $@
+org.gnome.SessionManager.ClientPrivate.ref.xml: $(top_srcdir)/gnome-session/org.gnome.SessionManager.ClientPrivate.xml spec-to-docbook.xsl
+	$(AM_V_GEN)$(XSLTPROC) $(top_srcdir)/doc/dbus/spec-to-docbook.xsl $< | tail -n +2 > $@
+org.gnome.SessionManager.Inhibitor.ref.xml: $(top_srcdir)/gnome-session/org.gnome.SessionManager.Inhibitor.xml spec-to-docbook.xsl
+	$(AM_V_GEN)$(XSLTPROC) $(top_srcdir)/doc/dbus/spec-to-docbook.xsl $< | tail -n +2 > $@
+org.gnome.SessionManager.Presence.ref.xml: $(top_srcdir)/gnome-session/org.gnome.SessionManager.Presence.xml spec-to-docbook.xsl
+	$(AM_V_GEN)$(XSLTPROC) $(top_srcdir)/doc/dbus/spec-to-docbook.xsl $< | tail -n +2 > $@
+
+BUILT_SOURCES =	\
+	org.gnome.SessionManager.ref.xml \
+	org.gnome.SessionManager.Client.ref.xml \
+	org.gnome.SessionManager.ClientPrivate.ref.xml \
+	org.gnome.SessionManager.Inhibitor.ref.xml \
+	org.gnome.SessionManager.Presence.ref.xml
+
+CLEANFILES =				\
+	$(BUILT_SOURCES)		\
+	$(htmldoc_DATA)
+
+EXTRA_DIST =				\
+	gnome-session.xml.in		\
+	config.xsl			\
+	docbook.css			\
+	dbus-introspect-docs.dtd	\
+	spec-to-docbook.xsl		\
+	meson.build
+
+-include $(top_srcdir)/git.mk
diff '--exclude=.git' -urN a/doc/man/Makefile.am b/doc/man/Makefile.am
--- a/doc/man/Makefile.am	1969-12-31 19:00:00.000000000 -0500
+++ b/doc/man/Makefile.am	2018-04-25 15:14:05.245268257 -0400
@@ -0,0 +1,30 @@
+XSLTPROC_FLAGS = \
+        --nonet \
+        --stringparam man.output.quietly 1 \
+        --stringparam funcsynopsis.style ansi \
+        --stringparam man.th.extra1.suppress 1 \
+        --stringparam man.authors.section.enabled 0 \
+        --stringparam man.copyright.section.enabled 0
+
+.xml.1:
+	$(AM_V_GEN) $(XSLTPROC) $(XSLTPROC_FLAGS) http://docbook.sourceforge.net/release/xsl/current/manpages/docbook.xsl $<
+
+man_MANS =				\
+	gnome-session.1			\
+	gnome-session-quit.1		\
+	gnome-session-inhibit.1
+
+if BUILD_SESSION_SELECTOR
+man_MANS += gnome-session-selector.1
+endif
+
+EXTRA_DIST =				\
+	meson.build			\
+	gnome-session-inhibit.xml	\
+	gnome-session-selector.xml	\
+	$(man_MANS)
+
+CLEANFILES =				\
+	gnome-session-inhibit.1
+
+-include $(top_srcdir)/git.mk
diff '--exclude=.git' -urN a/git.mk b/git.mk
--- a/git.mk	1969-12-31 19:00:00.000000000 -0500
+++ b/git.mk	2018-04-25 15:14:05.245268257 -0400
@@ -0,0 +1,227 @@
+# git.mk
+#
+# Copyright 2009, Red Hat, Inc.
+# Copyright 2010,2011 Behdad Esfahbod
+# Written by Behdad Esfahbod
+#
+# Copying and distribution of this file, with or without modification,
+# is permitted in any medium without royalty provided the copyright
+# notice and this notice are preserved.
+#
+# The latest version of this file can be downloaded from:
+#   https://raw.github.com/behdad/git.mk/master/git.mk
+# Bugs, etc, should be reported upstream at:
+#   https://github.com/behdad/git.mk
+#
+# To use in your project, import this file in your git repo's toplevel,
+# then do "make -f git.mk".  This modifies all Makefile.am files in
+# your project to -include git.mk.  Remember to add that line to new
+# Makefile.am files you create in your project, or just rerun the
+# "make -f git.mk".
+#
+# This enables automatic .gitignore generation.  If you need to ignore
+# more files, add them to the GITIGNOREFILES variable in your Makefile.am.
+# But think twice before doing that.  If a file has to be in .gitignore,
+# chances are very high that it's a generated file and should be in one
+# of MOSTLYCLEANFILES, CLEANFILES, DISTCLEANFILES, or MAINTAINERCLEANFILES.
+#
+# The only case that you need to manually add a file to GITIGNOREFILES is
+# when remove files in one of mostlyclean-local, clean-local, distclean-local,
+# or maintainer-clean-local make targets.
+#
+# Note that for files like editor backup, etc, there are better places to
+# ignore them.  See "man gitignore".
+#
+# If "make maintainer-clean" removes the files but they are not recognized
+# by this script (that is, if "git status" shows untracked files still), send
+# me the output of "git status" as well as your Makefile.am and Makefile for
+# the directories involved and I'll diagnose.
+#
+# For a list of toplevel files that should be in MAINTAINERCLEANFILES, see
+# Makefile.am.sample in the git.mk git repo.
+#
+# Don't EXTRA_DIST this file.  It is supposed to only live in git clones,
+# not tarballs.  It serves no useful purpose in tarballs and clutters the
+# build dir.
+#
+# This file knows how to handle autoconf, automake, libtool, gtk-doc,
+# gnome-doc-utils, yelp.m4, mallard, intltool, gsettings, dejagnu.
+#
+# This makefile provides the following targets:
+#
+# - all: "make all" will build all gitignore files.
+# - gitignore: makes all gitignore files in the current dir and subdirs.
+# - .gitignore: make gitignore file for the current dir.
+# - gitignore-recurse: makes all gitignore files in the subdirs.
+#
+# KNOWN ISSUES:
+#
+# - Recursive configure doesn't work as $(top_srcdir)/git.mk inside the
+#   submodule doesn't find us.  If you have configure.{in,ac} files in
+#   subdirs, add a proxy git.mk file in those dirs that simply does:
+#   "include $(top_srcdir)/../git.mk".  Add more ..'s to your taste.
+#   And add those files to git.  See vte/gnome-pty-helper/git.mk for
+#   example.
+#
+
+git-all: git-mk-install
+
+git-mk-install:
+	@echo Installing git makefile
+	@any_failed=; \
+		find "`test -z "$(top_srcdir)" && echo . || echo "$(top_srcdir)"`" -name Makefile.am | while read x; do \
+		if grep 'include .*/git.mk' $$x >/dev/null; then \
+			echo $$x already includes git.mk; \
+		else \
+			failed=; \
+			echo "Updating $$x"; \
+			{ cat $$x; \
+			  echo ''; \
+			  echo '-include $$(top_srcdir)/git.mk'; \
+			} > $$x.tmp || failed=1; \
+			if test x$$failed = x; then \
+				mv $$x.tmp $$x || failed=1; \
+			fi; \
+			if test x$$failed = x; then : else \
+				echo Failed updating $$x; >&2 \
+				any_failed=1; \
+			fi; \
+	fi; done; test -z "$$any_failed"
+
+.PHONY: git-all git-mk-install
+
+
+### .gitignore generation
+
+$(srcdir)/.gitignore: Makefile.am $(top_srcdir)/git.mk
+	$(AM_V_GEN) \
+	{ \
+		if test "x$(DOC_MODULE)" = x -o "x$(DOC_MAIN_SGML_FILE)" = x; then :; else \
+			for x in \
+				$(DOC_MODULE)-decl-list.txt \
+				$(DOC_MODULE)-decl.txt \
+				tmpl/$(DOC_MODULE)-unused.sgml \
+				"tmpl/*.bak" \
+				xml html \
+			; do echo /$$x; done; \
+		fi; \
+		if test "x$(DOC_MODULE)$(DOC_ID)" = x -o "x$(DOC_LINGUAS)" = x; then :; else \
+			for lc in $(DOC_LINGUAS); do \
+				for x in \
+					$(if $(DOC_MODULE),$(DOC_MODULE).xml) \
+					$(DOC_PAGES) \
+					$(DOC_INCLUDES) \
+				; do echo /$$lc/$$x; done; \
+			done; \
+			for x in \
+				$(_DOC_OMF_ALL) \
+				$(_DOC_DSK_ALL) \
+				$(_DOC_HTML_ALL) \
+				$(_DOC_MOFILES) \
+				$(DOC_H_FILE) \
+				"*/.xml2po.mo" \
+				"*/*.omf.out" \
+			; do echo /$$x; done; \
+		fi; \
+		if test "x$(HELP_ID)" = x -o "x$(HELP_LINGUAS)" = x; then :; else \
+			for lc in $(HELP_LINGUAS); do \
+				for x in \
+					$(HELP_FILES) \
+					"$$lc.stamp" \
+					"$$lc.mo" \
+				; do echo /$$lc/$$x; done; \
+			done; \
+		fi; \
+		if test "x$(gsettings_SCHEMAS)" = x; then :; else \
+			for x in \
+				$(gsettings_SCHEMAS:.xml=.valid) \
+				$(gsettings__enum_file) \
+			; do echo /$$x; done; \
+		fi; \
+		if test -f $(srcdir)/po/Makefile.in.in; then \
+			for x in \
+				po/Makefile.in.in \
+				po/Makefile.in \
+				po/Makefile \
+				po/POTFILES \
+				po/stamp-it \
+				po/.intltool-merge-cache \
+				"po/*.gmo" \
+				"po/*.mo" \
+				po/$(GETTEXT_PACKAGE).pot \
+				intltool-extract.in \
+				intltool-merge.in \
+				intltool-update.in \
+			; do echo /$$x; done; \
+		fi; \
+		if test -f $(srcdir)/configure; then \
+			for x in \
+				autom4te.cache \
+				configure \
+				config.h \
+				stamp-h1 \
+				libtool \
+				config.lt \
+			; do echo /$$x; done; \
+		fi; \
+		if test "x$(DEJATOOL)" = x; then :; else \
+			for x in \
+				$(DEJATOOL) \
+			; do echo /$$x.sum; echo /$$x.log; done; \
+			echo /site.exp; \
+		fi; \
+		for x in \
+			.gitignore \
+			$(GITIGNOREFILES) \
+			$(CLEANFILES) \
+			$(PROGRAMS) $(check_PROGRAMS) $(EXTRA_PROGRAMS) \
+			$(LIBRARIES) $(check_LIBRARIES) $(EXTRA_LIBRARIES) \
+			$(LTLIBRARIES) $(check_LTLIBRARIES) $(EXTRA_LTLIBRARIES) \
+			so_locations \
+			.libs _libs \
+			$(MOSTLYCLEANFILES) \
+			"*.$(OBJEXT)" \
+			"*.lo" \
+			$(DISTCLEANFILES) \
+			$(am__CONFIG_DISTCLEAN_FILES) \
+			$(CONFIG_CLEAN_FILES) \
+			TAGS ID GTAGS GRTAGS GSYMS GPATH tags \
+			"*.tab.c" \
+			$(MAINTAINERCLEANFILES) \
+			$(BUILT_SOURCES) \
+			$(DEPDIR) \
+			Makefile \
+			Makefile.in \
+			"*.orig" \
+			"*.rej" \
+			"*.bak" \
+			"*~" \
+			".*.sw[nop]" \
+			".dirstamp" \
+		; do echo /$$x; done; \
+	} | \
+	sed "s@^/`echo "$(srcdir)" | sed 's/\(.\)/[\1]/g'`/@/@" | \
+	sed 's@/[.]/@/@g' | \
+	LC_ALL=C sort | uniq > $@.tmp && \
+	mv $@.tmp $@;
+
+all: $(srcdir)/.gitignore gitignore-recurse-maybe
+gitignore: $(srcdir)/.gitignore gitignore-recurse
+
+gitignore-recurse-maybe:
+	@for subdir in $(DIST_SUBDIRS); do \
+	  case " $(SUBDIRS) " in \
+	    *" $$subdir "*) :;; \
+	    *) test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) .gitignore gitignore-recurse-maybe || echo "Skipping $$subdir");; \
+	  esac; \
+	done
+gitignore-recurse:
+	@for subdir in $(DIST_SUBDIRS); do \
+	    test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) .gitignore gitignore-recurse || echo "Skipping $$subdir"); \
+	done
+
+maintainer-clean: gitignore-clean
+gitignore-clean:
+	-rm -f $(srcdir)/.gitignore
+
+.PHONY: gitignore-clean gitignore gitignore-recurse gitignore-recurse-maybe
diff '--exclude=.git' -urN a/gnome-session/Makefile.am b/gnome-session/Makefile.am
--- a/gnome-session/Makefile.am	1969-12-31 19:00:00.000000000 -0500
+++ b/gnome-session/Makefile.am	2018-04-25 15:14:05.245268257 -0400
@@ -0,0 +1,222 @@
+EXTRA_DIST = gnome-session.in
+NULL =
+bin_SCRIPTS = gnome-session
+libexec_PROGRAMS = gnome-session-binary gnome-session-failed
+noinst_LTLIBRARIES = libgsmutil.la
+noinst_PROGRAMS = 		\
+	test-client-dbus	\
+	test-inhibit		\
+	test-process-helper
+
+AM_CPPFLAGS =					\
+	$(GTK3_CFLAGS)				\
+	$(GNOME_SESSION_CFLAGS)			\
+	$(UPOWER_CFLAGS)			\
+	$(DISABLE_DEPRECATED_CFLAGS)
+
+AM_CFLAGS = $(WARN_CFLAGS)
+
+gnome-session: gnome-session.in Makefile
+	$(AM_V_GEN) sed \
+		-e "s|\@libexecdir\@|$(libexecdir)|" \
+                $< > $@.tmp && mv $@.tmp $@
+
+gnome_session_binary_SOURCES =			\
+	$(BUILT_SOURCES)			\
+	gsm-app.h				\
+	gsm-app.c				\
+	gsm-autostart-app.h			\
+	gsm-autostart-app.c			\
+	gsm-client.c				\
+	gsm-client.h				\
+	gsm-xsmp-client.h			\
+	gsm-xsmp-client.c			\
+	gsm-dbus-client.h			\
+	gsm-dbus-client.c			\
+	gsm-fail-whale.h			\
+	gsm-fail-whale.c			\
+	gsm-system.h				\
+	gsm-system.c				\
+	gsm-systemd.h				\
+	gsm-systemd.c				\
+	gsm-presence.h				\
+	gsm-presence-flag.h			\
+	gsm-presence.c				\
+	gdm-log.h				\
+	gdm-log.c				\
+	main.c					\
+	gsm-store.h				\
+	gsm-store.c				\
+	gsm-inhibitor.h				\
+	gsm-inhibitor.c				\
+	gsm-inhibitor-flag.h			\
+	gsm-manager.c				\
+	gsm-manager.h				\
+	gsm-manager-logout-mode.h		\
+	gsm-process-helper.c			\
+	gsm-process-helper.h			\
+	gsm-session-fill.c			\
+	gsm-session-fill.h			\
+	gsm-session-save.c			\
+	gsm-session-save.h			\
+	gsm-shell-extensions.c			\
+	gsm-shell-extensions.h			\
+	gsm-shell.c				\
+	gsm-shell.h				\
+	gsm-xsmp-server.c			\
+	gsm-xsmp-server.h
+
+if HAVE_CONSOLEKIT
+gnome_session_binary_SOURCES += gsm-consolekit.c gsm-consolekit.h
+else
+EXTRA_DIST += gsm-consolekit.c gsm-consolekit.h
+endif
+
+gnome_session_binary_CPPFLAGS =			\
+	$(AM_CPPFLAGS)				\
+	$(X11_CFLAGS)				\
+	$(SM_CFLAGS)				\
+	$(ICE_CFLAGS)				\
+	$(XEXT_CFLAGS)				\
+	$(GCONF_CFLAGS)				\
+	$(CONSOLEKIT_CFLAGS)			\
+	$(SYSTEMD_CFLAGS)			\
+	$(GIOUNIX_CFLAGS)			\
+	-DLOCALE_DIR=\""$(datadir)/locale"\"	\
+	-DDATA_DIR=\""$(datadir)/gnome-session"\" \
+	-DLIBEXECDIR=\"$(libexecdir)\"		\
+	-DGTKBUILDER_DIR=\""$(pkgdatadir)"\"
+
+gnome_session_binary_LDADD =			\
+	libgsmutil.la 				\
+	$(X11_LIBS)				\
+	$(SM_LIBS)				\
+	$(ICE_LIBS)				\
+	$(XRENDER_LIBS)				\
+	$(XTEST_LIBS)				\
+	$(XEXT_LIBS)				\
+	$(GNOME_SESSION_LIBS)			\
+	$(UPOWER_LIBS)				\
+	$(GCONF_LIBS)				\
+	$(CONSOLEKIT_LIBS)			\
+	$(SYSTEMD_LIBS)				\
+	$(GIOUNIX_LIBS)				\
+	$(EXECINFO_LIBS)
+
+libgsmutil_la_SOURCES =				\
+	gsm-util.c				\
+	gsm-util.h
+
+libgsmutil_la_CPPFLAGS =                       \
+       $(AM_CPPFLAGS)
+
+libgsmutil_la_LIBADD = 				\
+	$(GNOME_SESSION_LIBS)			\
+	$(NULL)
+
+gnome_session_failed_SOURCES =         \
+       gsm-fail-whale-dialog.c \
+       gsm-fail-whale-dialog.h \
+       gsm-icon-names.h
+
+gnome_session_failed_CPPFLAGS = \
+       $(GTK3_CFLAGS)          \
+       -DLOCALE_DIR=\""$(datadir)/locale"\"
+
+gnome_session_failed_LDADD =   \
+       $(GTK3_LIBS)
+
+test_inhibit_SOURCES = test-inhibit.c
+test_inhibit_LDADD = $(GTK3_LIBS) $(GNOME_SESSION_LIBS)
+
+test_client_dbus_SOURCES = test-client-dbus.c
+test_client_dbus_LDADD = $(GIO_LIBS)
+
+test_process_helper_SOURCES = test-process-helper.c gsm-process-helper.c gsm-process-helper.h
+test_process_helper_CFLAGS = $(AM_CFLAGS) $(GIO_CFLAGS)
+test_process_helper_LDADD = $(GIO_LIBS)
+
+org.gnome.SessionManager.h: org.gnome.SessionManager.xml Makefile.am
+	$(AM_V_GEN) gdbus-codegen --interface-prefix org.gnome.SessionManager. \
+	--generate-c-code org.gnome.SessionManager \
+	--c-namespace Gsm \
+        --annotate "org.gnome.SessionManager" "org.gtk.GDBus.C.Name" ExportedManager \
+	$(srcdir)/org.gnome.SessionManager.xml
+org.gnome.SessionManager.c: org.gnome.SessionManager.h
+	@: # generated as a side-effect
+
+org.gnome.SessionManager.Client.h: org.gnome.SessionManager.Client.xml Makefile.am
+	$(AM_V_GEN) gdbus-codegen --interface-prefix org.gnome.SessionManager.Client. \
+	--generate-c-code org.gnome.SessionManager.Client \
+	--c-namespace Gsm \
+        --annotate "org.gnome.SessionManager.Client" "org.gtk.GDBus.C.Name" ExportedClient \
+	$(srcdir)/org.gnome.SessionManager.Client.xml
+org.gnome.SessionManager.Client.c: org.gnome.SessionManager.Client.h
+	@: # generated as a side-effect
+
+org.gnome.SessionManager.ClientPrivate.h: org.gnome.SessionManager.ClientPrivate.xml Makefile.am
+	$(AM_V_GEN) gdbus-codegen --interface-prefix org.gnome.SessionManager.ClientPrivate. \
+	--generate-c-code org.gnome.SessionManager.ClientPrivate \
+	--c-namespace Gsm \
+        --annotate "org.gnome.SessionManager.ClientPrivate" "org.gtk.GDBus.C.Name" ExportedClientPrivate \
+	$(srcdir)/org.gnome.SessionManager.ClientPrivate.xml
+org.gnome.SessionManager.ClientPrivate.c: org.gnome.SessionManager.ClientPrivate.h
+	@: # generated as a side-effect
+
+org.gnome.SessionManager.App.h: org.gnome.SessionManager.App.xml Makefile.am
+	$(AM_V_GEN) gdbus-codegen --interface-prefix org.gnome.SessionManager.App. \
+	--generate-c-code org.gnome.SessionManager.App \
+	--c-namespace Gsm \
+        --annotate "org.gnome.SessionManager.App" "org.gtk.GDBus.C.Name" ExportedApp \
+	$(srcdir)/org.gnome.SessionManager.App.xml
+org.gnome.SessionManager.App.c: org.gnome.SessionManager.App.h
+	@: # generated as a side-effect
+
+org.gnome.SessionManager.Inhibitor.h: org.gnome.SessionManager.Inhibitor.xml Makefile.am
+	$(AM_V_GEN) gdbus-codegen --interface-prefix org.gnome.SessionManager.Inhibitor. \
+	--generate-c-code org.gnome.SessionManager.Inhibitor \
+	--c-namespace Gsm \
+        --annotate "org.gnome.SessionManager.Inhibitor" "org.gtk.GDBus.C.Name" ExportedInhibitor \
+	$(srcdir)/org.gnome.SessionManager.Inhibitor.xml
+org.gnome.SessionManager.Inhibitor.c: org.gnome.SessionManager.Inhibitor.h
+	@: # generated as a side-effect
+
+org.gnome.SessionManager.Presence.h: org.gnome.SessionManager.Presence.xml Makefile.am
+	$(AM_V_GEN) gdbus-codegen --interface-prefix org.gnome.SessionManager.Presence. \
+	--generate-c-code org.gnome.SessionManager.Presence \
+	--c-namespace Gsm \
+        --annotate "org.gnome.SessionManager.Presence" "org.gtk.GDBus.C.Name" ExportedPresence \
+	$(srcdir)/org.gnome.SessionManager.Presence.xml
+org.gnome.SessionManager.Presence.c: org.gnome.SessionManager.Presence.h
+	@: # generated as a side-effect
+
+BUILT_SOURCES =				\
+	org.gnome.SessionManager.App.h		\
+	org.gnome.SessionManager.App.c		\
+	org.gnome.SessionManager.Client.h		\
+	org.gnome.SessionManager.Client.c		\
+	org.gnome.SessionManager.ClientPrivate.h	\
+	org.gnome.SessionManager.ClientPrivate.c	\
+	org.gnome.SessionManager.Inhibitor.h	\
+	org.gnome.SessionManager.Inhibitor.c	\
+	org.gnome.SessionManager.h		\
+	org.gnome.SessionManager.c		\
+	org.gnome.SessionManager.Presence.h	\
+	org.gnome.SessionManager.Presence.c
+
+EXTRA_DIST +=						\
+	meson.build					\
+	README						\
+	org.gnome.SessionManager.xml			\
+	org.gnome.SessionManager.App.xml		\
+	org.gnome.SessionManager.Client.xml		\
+	org.gnome.SessionManager.ClientPrivate.xml	\
+	org.gnome.SessionManager.Inhibitor.xml		\
+	org.gnome.SessionManager.Presence.xml
+
+CLEANFILES =	\
+	gnome-session \
+	gnome-session.tmp \
+	$(BUILT_SOURCES)
+
+-include $(top_srcdir)/git.mk
diff '--exclude=.git' -urN a/tools/Makefile.am b/tools/Makefile.am
--- a/tools/Makefile.am	1969-12-31 19:00:00.000000000 -0500
+++ b/tools/Makefile.am	2018-04-25 15:14:05.245268257 -0400
@@ -0,0 +1,106 @@
+bin_PROGRAMS = gnome-session-quit gnome-session-inhibit
+libexec_PROGRAMS = \
+	gnome-session-check-accelerated \
+	gnome-session-check-accelerated-gl-helper \
+	gnome-session-check-accelerated-gles-helper
+
+if BUILD_SESSION_SELECTOR
+bin_PROGRAMS += gnome-session-selector
+dist_bin_SCRIPTS = gnome-session-custom-session
+endif
+
+AM_CPPFLAGS =
+
+AM_CFLAGS = $(WARN_CFLAGS)
+
+gnome_session_quit_SOURCES =			\
+	gnome-session-quit.c
+
+gnome_session_quit_CPPFLAGS =			\
+	$(AM_CPPFLAGS)				\
+	$(GNOME_SESSION_CFLAGS)			\
+	$(DBUS_GLIB_CFLAGS)			\
+	$(GCONF_FLAGS)				\
+	-DLOCALE_DIR=\""$(datadir)/locale"\"	\
+	$(DISABLE_DEPRECATED_CFLAGS)
+
+gnome_session_quit_LDADD =			\
+	$(SM_LIBS)				\
+	$(ICE_LIBS)				\
+	$(GNOME_SESSION_LIBS)			\
+	$(DBUS_GLIB_LIBS)			\
+	$(GCONF_LIBS)
+
+gnome_session_inhibit_SOURCES =			\
+	gnome-session-inhibit.c
+
+gnome_session_inhibit_CPPFLAGS =		\
+	-I$(top_srcdir)/			\
+	$(AM_CPPFLAGS)				\
+	$(GNOME_SESSION_CFLAGS)			\
+	-DLOCALE_DIR=\""$(datadir)/locale"\"	\
+	$(DISABLE_DEPRECATED_CFLAGS)
+
+gnome_session_inhibit_LDADD =			\
+	$(GNOME_SESSION_LIBS)
+
+gnome_session_check_accelerated_gles_helper_SOURCES = 		\
+	gnome-session-check-accelerated-common.h		\
+	gnome-session-check-accelerated-gles-helper.c
+
+gnome_session_check_accelerated_gles_helper_CPPFLAGS =	\
+	-DPKGDATADIR=\""$(pkgdatadir)"\"		\
+	$(GLES_TEST_CFLAGS)				\
+	$(GTK3_CFLAGS)
+
+gnome_session_check_accelerated_gles_helper_LDADD =	\
+	$(GLES_TEST_LIBS)				\
+	$(GTK3_LIBS)					\
+	$(X11_LIBS)
+
+gnome_session_check_accelerated_gl_helper_SOURCES = 		\
+	gnome-session-check-accelerated-common.h		\
+	gnome-session-check-accelerated-gl-helper.c
+
+gnome_session_check_accelerated_gl_helper_CPPFLAGS =	\
+	-DPKGDATADIR=\""$(pkgdatadir)"\"		\
+	$(GL_TEST_CFLAGS)
+
+gnome_session_check_accelerated_gl_helper_LDADD = 		\
+	$(GL_TEST_LIBS)				\
+	$(X11_LIBS)
+
+gnome_session_check_accelerated_SOURCES =       	\
+	gnome-session-check-accelerated-common.h	\
+	gnome-session-check-accelerated.c
+
+gnome_session_check_accelerated_CPPFLAGS =      \
+	-DLIBEXECDIR=\""$(libexecdir)"\"	\
+	$(AM_CPPFLAGS)			        \
+	$(GTK3_CFLAGS)				\
+	$(GL_TEST_CFLAGS)
+
+gnome_session_check_accelerated_LDADD =         \
+	$(GTK3_LIBS)				\
+	$(X11_LIBS)				\
+	$(GL_TEST_LIBS)
+
+if BUILD_SESSION_SELECTOR
+gnome_session_selector_CPPFLAGS =		\
+	$(AM_CPPFLAGS)				\
+	$(GNOME_SESSION_CFLAGS)			\
+	$(DBUS_GLIB_CFLAGS)			\
+	-DGTKBUILDER_DIR=\""$(pkgdatadir)"\"	\
+	-DLOCALE_DIR=\""$(datadir)/locale"\"	\
+	$(DISABLE_DEPRECATED_CFLAGS)
+
+gnome_session_selector_LDADD = 			\
+	$(SESSION_SELECTOR_LIBS)
+
+gnome_session_selector_SOURCES = 		\
+	gnome-session-selector.c
+endif
+
+EXTRA_DIST = meson.build
+
+-include $(top_srcdir)/git.mk
